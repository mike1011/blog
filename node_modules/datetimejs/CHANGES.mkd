# DatetimeJS changelog

## 0.3.4

### Fixed `hour24` utility

It was broken when hour is 12. Now all fixes.

## 0.3.3

### Fixed parsing of the `%p` token

The `timeAdjust` parameter generated by `%p` was not being used.

## 0.3.2

### Added `datetime.format.reformat()` method

This method reformats string date/time from input format to output format.

## 0.3.1

### Changed the way varaibles are read internally

The variables are now all accessed through the `datetime` object, so it is
possible to override any and all variables at runtime.

## 0.3.0

This release is not backwards compatible.

### The `#delta()` and time/date-difference-related methods are moved

They are now in `datetime.dtdelta` submodule.

### `parse` and `format` submodules

New `parse` and `format` submodules are now available. `strptime`, `strftime`,
`isoparse` and `isoformat` are now aliases for methods in those submodules.

### Test suite nearing completion

New tests were added and bugs squatted.

### New variables exposed

`DAY_MS`, `REGEXP_CHARS`, and `PARSE_TOKEN_RE` are now exposed, although some
of them are not overridable.

## 0.2.0

## Fixed previously broken `isBefore` and `isAfter`

They had the opposite results. This has now been fixed, and it's a
backwards-incompatible change.

## Fixed failing tests on IE and FireFox

The way Date objects were cloned by passing them to Date constructor was
clearly not a very bright idea. It seems that on most browsers this causes the
data object to be evaluated to a string or something similar, thus loosing  the
millisecond bit. While  this was fine in some cases, it wasn't fine for the
`#delta()` method.

## 0.1.0

Apart from many bugfixes and additonal unit tests...

## `zeroPad` API change

The zeroPad now takes one extra argument `tail`, which allows padding from the
tail end of float numbers.

## `datetime.isoformat` and `datetime.isoparse`

Format and parse date and time using ISO format '%Y-%m-%dT%H:%M:%f'

## Addition of %f formatting and parsing token

This token will return seconds with a fractional part, zero-padded and two
tail-padded float digits.
