<!doctype html>
<html ng-app="myApp">
  <head>
    <title>My Angular App</title>
     <!-- <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js"> -->
    </script>
      <!-- <script src="./app.js"></script> -->
    <!-- Latest compiled and minified CSS -->
     <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
    <script type="text/javascript"  src="../javascripts/angular.js"></script> 
    <script type="text/javascript"  src="../javascripts/angular-resource.js"></script> 
    

 <script type="text/javascript"  src="../javascripts/jquery.min.js"></script>
 <script type="text/javascript"  src="../javascripts/jquery-ui.min.js"></script>
  <script type="text/javascript"  src="../javascripts/jquery.geocomplete.min.js"></script>
   <script src="http://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script> 

 </head>
  <body>


<div ng-controller="Controller1" class="container" style="margin-top: 30px;">
  <div class="row  well">
    <div class="col-md-8" style="padding: 30px;">
  <form class="form-horizontal" ng-submit="addEntry()" >
  <div class=" form-group">
        <label class="control-label">Email</label>
            <input type="email" class="form-control" name="email" placeholder="Email" required ng-model="newEntry.email">
            <span ng-show="errorEmail">{{errorEmail}}</span>
        <label class="control-label">Username</label>
            <input type="text" class="form-control" name="username" placeholder="Any username of your choice" required ng-model="newEntry.username">
            <span ng-show="errorUsername">{{errorUsername}}</span>
        <label class="control-label">About Yourself</label>
             <textarea class="form-control" rows="3" name="about_yourself" placeholder="About yourself" required ng-model="newEntry.about_yourself"></textarea>

    
        <label for="location" class="control-label">Location on map</label>
          <div class="input-group">
               <input id="geocomplete" type="text" class="form-control" placeholder="Type in an address" value="Mumbai India" />
               <span class="input-group-btn">
                  <input id="find" type="button" class="btn btn-primary" value="find" />
               </span>
            </div><!-- /input-group -->

      
        <input type="text"  name="lat" value="" class="form-control"  class="form-control " ng-model="newEntry.lat" style="display:none;">
      
        <input type="text"  name="lng" value=""  class="form-control"  class="form-control "  ng-model="newEntry.lng" style="display:none;">
      
        <input   type="text" name="formatted_address" value="" class="form-control "  ng-model="newEntry.formatted_address" style="display:none;">
      

            <button type="submit" class="btn btn-primary" style="margin-top: 30px;">Create</button>

    </div>

</form>
</div>



 <div class="map_canvas col-md-4" style="height:400px;"></div>


</div><!-- row ends -->

 
<div class="row">
        <ul class="list-unstyled list-group">
          <p>Available users: 
            <span>
                <select ng-model="selected" ng-options="f.name for f in entries | orderBy:'name'">
                   <option value="" selected="selected">Please Select</option>
                </select>    
            </span>
          </p>
            <li ng-repeat="num in entries | orderBy:'name' ">

                  <div class="col-md-6">
                            <div class="panel panel-default">
                                <div class="row">
                                    <div class="col-md-8">
                                        <span></span>
                                         <img class="img-responsive" alt="Map" src="http://maps.google.com/maps/api/staticmap?center={{num.lat}},{{num.lng}}&markers=icon:http://tinyurl.com/2ftvtt6|{{num.lat}},{{num.lng}}&zoom=12&size=400x400&sensor=false">
                                    </div>
                                    <div class="col-md-4">
                                        <div class="clearfix">
                                            <p class="text-center jumbotron" style="margin-left: -30px;">
                                                <span class="fa fa-user icon">{{num.name | uppercase}}</span>
                                            </p>

                                        </div>
                                        
                                            <h4>
                                              <span class="fa fa-map-marker icon"></span> {{num.formatted_address}}
                                            </h4>
                                        <p>    
                                            {{num.email}} <!-- <span class="fa fa-lock icon pull-right"> Sold</span> -->
                                        </p>
                                        <p>
                                                 <a ng-click="deleteEntry(num.id)" class="btn btn-xs btn-danger"><span class="fa fa-times"></span>Delete</a>                                       
                                                  <a href="#" class="btn btn-xs btn-default"><span class="fa fa-heart"></span> Favorite</a>
                                            </p>
                                    </div>
                                </div>
                            </div>
                        </div>     
                                
            </li>
        </ul>
  </div>

    </div>

  </body>
</html>




   


<script>
    var app = angular.module('myApp', ['ngResource']);

    app.factory('Users', function ($resource) {
        return $resource("/users/:id", {id: "@id"}, {update: {method: "PUT"}})
             });



 // var User = $resource('/users/:userId', {userId:'@id'});
 // var user = User.get({userId:12}, function() {
 //   user.abc = true;
 //   user.$save();
 // });

    app.controller('Controller1', ['$scope', 'Users','$http',function($scope, Users,$http) {
                $scope.entries = [];
                //get all users and show it on the page
                 Users.query().$promise.then(
                       //success
                       function( result_array ){
                       /*Do something with value*/
                       console.log("successsssssss");
                       angular.forEach(result_array, function(value, key) {
                                 console.log(result_array[key].name);
                                $scope.entries.push(result_array[key]);

                               
                           });
                    },
                       //error
                       function( error ){
                       /*Do something with error*/
                       console.log("faileddddddddd");
                     }
                    )//method ends


// Users.get({id:1}).$promise.then(
//       //success
//       function( value ){
//       /*Do something with value*/
//       console.log("successsssssss");
//     },
//       //error
//       function( error ){
//       /*Do something with error*/
//       console.log("faileddddddddd");
//     }
//    )


                     //  //================to get only one user
                     //  Users.get({id:1}, function(user) {
                     //  // here result should be an array.
                     //        console.log(user.data.id);
                     // });
     
            // console.log(users_array);;
            // angular.forEach(Users.query(), function(value, key) {
            //     alert(666666666);
            // });
// angular.forEach(users_array, function(index) {
// $scope.entries.push(users_array[index]["id"]);
  
// });


           // We can retrieve a collection from the server
            //var users_array = Users.query(function() {
              // GET: /user/123/card
              // server returns: [ {id:456, number:'1234', name:'Smith'} ];

              // var first_user = users_array[0];
              // alert(first_user);

              // angular.forEach(users_array,function(index){
              //     //console.log(users_array[index].title);
              //     alert(index);

              // })
                

              


            //});

      //form submit and post
       $scope.addEntry = function() {

          var data={
            "username":$scope.newEntry.username,
            "email":$scope.newEntry.email,
            "lat":$("input[name=lat]").val(),
            "lng":$("input[name=lng]").val(),
            "formatted_address":$("input[name=formatted_address]").val(),
            "about_yourself":$scope.newEntry.about_yourself
          };

        //=======inject $http in controller
        $http({
          method  : 'POST',
          url     : '/users',
          data    : data //forms user object
          //commented as at the server,its using req.body and not req.params
          //headers : {'Content-Type': 'application/x-www-form-urlencoded'} 
         })
          .success(function(data) {
            if (data.errors) {
              // Showing errors.
              $scope.errorUsername = data.errors.username;
              $scope.errorEmail = data.errors.email;
            } else {
              //$scope.message = data.message;
              $scope.entries = Users.query();
              //empty the form
              $scope.newEntry = {};
            }
          });

          //$scope.entries.push($scope.newEntry);
          
         //save the object in db and again show all entries to user 
               // we can create an instance as well
               //============using resource save
      //   var user = new Users();
      //   // create a blank object to handle form data.
      //   $scope.newEntry = {};
      // newEntry.username = $scope.newEntry.username;
      // newEntry.email = $scope.newEntry.email;
      // //user.username = "Sinatra";
      // //user.email = "sinatra@EMAIL.COM";
      // newEntry.about_yourself = "nothing to say";
      // newEntry.lat= "123.123";
      // newEntry.lng= "456.456";
      // newEntry.formatted_address= "NEW YORK usa";
      // newEntry.created_at= new Date();       
      // newEntry.$save(function () {
      //         $scope.entries = Users.query();
      //     });
                                // POST: /user/123/c

                };//addEntry ends




  //DELETE USER
         $scope.deleteEntry = function(userId) {
          console.log("====delete clicked======="); 


             Users.delete({id:userId}, function() {
              $scope.entries = Users.query();
            });
                  



                };//deleteEntry ends                
          
    }]);//controller ends

 </script>




 <!-- ======================script for new form  -->

<script type="text/javascript">
$(document).ready(function(){

var options = {
  map: ".map_canvas",
  location: "Mumbai",
  mapOptions: {
    streetViewControl: false,
    mapTypeId : google.maps.MapTypeId.ROADMAP
  },
  markerOptions: {
    draggable: true
  }
};





$("#geocomplete").geocomplete(options).bind("geocode:result", function(event, result){ 
      $("input[name=lat]").val(result.geometry.location.lat());
      $("input[name=lng]").val(result.geometry.location.lng());
      $("input[name=formatted_address]").val(result.formatted_address);
      console.log(result.formatted_address);
      var map = $("#geocomplete").geocomplete("map"),
///////////////////////This code should work now as expected-STARTS 
        marker = $("#geocomplete").geocomplete("marker");
          //there is only a single marker, use only a single infowindow
           if(!marker.get('infowindow')){
             marker.set('infowindow',new google.maps.InfoWindow());
             //commented to disable click handler and enable autoopen
             google.maps.event.addListener(marker, 'click', function() {
               this.get('infowindow').open(map,this);
             });
           }
           ////commented to disable click handler and enable autoopen
       //marker.get('infowindow').close();    
       map.setZoom(15);
       map.setCenter(result.geometry.location);
       marker.setMap(map);
       marker.get('infowindow').setContent('<div class="infowindow_places"><b><i>'+result.formatted_address+'</i></b></div>');
       //added to autoopen infowindow
       marker.get('infowindow').open(map, marker);
 
})//method ends


function GetLatLong(latLng,map){
      var geocoder = new google.maps.Geocoder();
     geocoder.geocode({'latLng': latLng }, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      if (results[0]) {
        var road = results[0].address_components[1].long_name;
        var town = results[0].address_components[2].long_name;
        var county = results[0].address_components[3].long_name;
        var country = results[0].address_components[4].long_name;
        $("#geocomplete").val(road+' '+town+' '+county+' '+country);
        
        console.log('<b>'+road+' '+town+' '+county+' '+country+'</b>');

      var map = $("#geocomplete").geocomplete("map"),
///////////////////////This code should work now as expected-STARTS 
        marker = $("#geocomplete").geocomplete("marker");
          //there is only a single marker, use only a single infowindow
           if(!marker.get('infowindow')){
             marker.set('infowindow',new google.maps.InfoWindow());
             //commented to disable click handler and enable autoopen
             google.maps.event.addListener(marker, 'click', function() {
               this.get('infowindow').open(map,this);
             });
           }
           ////commented to disable click handler and enable autoopen
       //marker.get('infowindow').close();    
       map.setZoom(15);
       map.setCenter(latLng);
       marker.setMap(map);
       marker.get('infowindow').setContent('<div class="infowindow_places"><b>'+road+' '+town+' '+county+' '+country+'</b></div>');
       //added to autoopen infowindow
       marker.get('infowindow').open(map, marker);

        
      }
    }
  }); 
}//method ends

        
$("#geocomplete").bind("geocode:dragged", function(event, latLng){
  console.log('Dragged Lat: '+latLng.lat());
  console.log('Dragged Lng: '+latLng.lng());
   $("input[name=lat]").val(latLng.lat());
   $("input[name=lng]").val(latLng.lng());
   $("#reset").show();
  var map = $("#geocomplete").geocomplete("map");
    map.panTo(latLng);
    GetLatLong(latLng,map);
});



        $("#find").click(function(){
          $("#geocomplete").trigger("geocode");
        }).click();


      });//document ends
    </script>     